name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-clippy-analyze:
    name: Run clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true

      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Run clippy
        run: cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install SDL2
        run: sudo apt-get install libsdl2-dev
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose --all-features
  check-features:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Check No Features
        run: cargo check --no-default-features
      - name: Check Crossterm
        run: cargo check --no-default-features --features "crossterm"
      - name: Check Embedded Graphics
        run: cargo check --no-default-features --features "embedded-graphics"
      - name: Check all features
        run: cargo check --all-features

  lint-markdown:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: DavidAnson/markdownlint-cli2-action@v19.1.0
        with:
          globs: "**/*.md"
