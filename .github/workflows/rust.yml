name: Rust

on:
  push:
    branches: ["main", "v0.5", "v0.6"]
  pull_request:
    branches: ["main", "v0.5", "v0.6"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
      - name: Install SDL2
        run: sudo apt-get update && sudo apt-get install libsdl2-dev
      - name: Run tests
        run: cargo test --verbose --all --all-features
  check-features:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
      - name: Check feature combinations
        run: cargo hack check --feature-powerset --no-dev-deps

  clippy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy --all --all-features -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
      - name: Rustfmt
        run: rustfmt **/*.rs --check --edition 2024

  lint-markdown:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Markdown lint
        uses: DavidAnson/markdownlint-cli2-action@v20
        with:
          globs: "**/*.md"

  test-book:
    name: test-book
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
      - name: Install latest mdbook
        run: |
          tag=$(curl 'https://api.github.com/repos/rust-lang/mdbook/releases/latest' | jq -r '.tag_name')
          url="https://github.com/rust-lang/mdbook/releases/download/${tag}/mdbook-${tag}-x86_64-unknown-linux-gnu.tar.gz"
          mkdir bin
          curl -sSL $url | tar -xz --directory=bin
          echo "$(pwd)/bin" >> $GITHUB_PATH
      - name: Install SDL2
        run: sudo apt-get update && sudo apt-get install libsdl2-dev
      - name: Run book tests
        run: |
          # Create build deps for mdbook to reference
          cargo build --examples --all-features
          mdbook test -L target/debug/deps docs/book

  semver-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

  typos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for typos
        uses: crate-ci/typos@v1.33.1

  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install SDL2
        run: sudo apt-get update && sudo apt-get install libsdl2-dev
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --package buoyant --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
